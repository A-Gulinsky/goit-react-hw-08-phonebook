{"version":3,"file":"static/js/698.6be077ca.chunk.js","mappings":"0PAEaA,EAAOC,EAAAA,EAAAA,KAAH,ycAyBJC,EAAID,EAAAA,EAAAA,EAAH,gHAQDE,EAAQF,EAAAA,EAAAA,MAAH,ySAqBLG,EAASH,EAAAA,EAAAA,MAAH,+P,SC7CNI,EAAY,WAGvB,IAAMC,GAAWC,EAAAA,EAAAA,MAGjB,GAAgEC,EAAAA,EAAAA,IAAQ,CACtEC,cAAe,CACbC,MAAO,GACPC,SAAU,MAHNC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAA2BC,EAA7C,EAAgCC,UAAaD,OAASE,EAAtD,EAAsDA,MAiBtD,OACE,UAAChB,EAAD,CAAMiB,SAAUJ,GAVD,SAAC,GAAyB,IAAvBH,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAEzBL,GAASY,EAAAA,EAAAA,IAAM,CACbR,MAAOA,EACPC,SAAUA,KAEZK,GACD,IAGC,WAEE,kCAEA,SAACb,GAAD,gBACEgB,aAAa,OACTP,EAAS,QAAS,CAACQ,SAAS,oBAFlC,IAGEC,MAAO,CAAEC,YAAaR,EAAOJ,MAAQ,MAAQ,WAC7Ca,YAAY,WAEbT,EAAOJ,QAAS,SAACR,EAAD,UAAIY,EAAOJ,MAAMc,WAElC,SAACrB,GAAD,gBACEgB,aAAa,OACTP,EAAS,WAAY,CAACQ,SAAS,oBAFrC,IAGEC,MAAO,CAAEC,YAAaR,EAAOH,SAAW,MAAQ,WAChDY,YAAY,WACZE,KAAK,cAENX,EAAOH,WAAY,SAACT,EAAD,UAAIY,EAAOH,SAASa,WAExC,SAACpB,EAAD,CAAQqB,KAAK,SAASC,MAAM,cAIjC,E,UCzDc,SAASC,IACtB,OACE,4BAEE,SAACC,EAAA,EAAD,WACE,wCAGF,SAACvB,EAAD,MAGL,C","sources":["components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/LoginPage.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 15px;\n  width: 300px;\n\n  margin-left: auto;\n  margin-right: auto;\n  padding: 25px;\n\n  border: 2px solid #615e5e;\n  border-radius: 4px;\n  box-shadow: 4px 4px 5px 0px rgba(0,0,0,0.75);\n\n  transition: 200ms;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.01);\n    box-shadow: 8px 8px 5px 0px rgba(0,0,0,0.75);\n  }\n`\n\nexport const P = styled.p`\n  margin-bottom: 5px;\n\n  font-weight: 600;\n  text-align: center;\n  color: #064ec1;\n`\n\nexport const Input = styled.input`\n  display: block;\n  width: 250px;\n\n  padding: 10px 8px;\n\n  font-size: 16px;\n  color: #514d4d;\n\n  border: 1px solid black;\n  border-radius: 4px;\n\n  outline: transparent;\n  transition: 200ms;\n\n  &:hover,\n  &:focus {\n    box-shadow: 0px 0px 5px #064ec1;\n  }\n`\n\nexport const Button = styled.input`\n  padding: 10px 15px;\n\n  color: white;\n\n  background-color: #1d6be7;\n  border: 1px solid transparent;\n  border-radius: 4px;\n\n  transition: 150ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    background-color: #064ec1;\n  }\n`","// react hook form\nimport { useForm } from 'react-hook-form'\n\n// redux\nimport { useDispatch } from \"react-redux\"\nimport { login } from \"redux/auth/operations\"\n\n// emotion\nimport { Button, Form, Input, P } from './LoginForm.styled'\n\n\nexport const LoginForm = () => {\n  \n  // redux\n  const dispatch = useDispatch()\n\n  // react hook form\n  const { register, handleSubmit, formState: { errors },reset } = useForm({\n    defaultValues: {\n      email: '',\n      password: ''\n    }\n  })\n\n  // using dispatch in this func.\n  const onSubmit = ({ email, password }) => {\n    \n    dispatch(login({\n      email: email,\n      password: password\n    }))\n    reset()\n  }\n\n  return (\n    <Form onSubmit={handleSubmit(onSubmit)}>\n      \n      <b>Login</b>\n\n      <Input\n        autoComplete=\"off\"\n        {...register(\"email\", {required: `Required field`})}\n        style={{ borderColor: errors.email ? 'red' : 'initial' }}\n        placeholder=\"email\"\n      />\n      {errors.email && <P>{errors.email.message}</P>}\n\n      <Input\n        autoComplete=\"off\"\n        {...register(\"password\", {required: `Required field`})}\n        style={{ borderColor: errors.password ? 'red' : 'initial' }}\n        placeholder=\"password\"\n        type='password'\n      />\n      {errors.password && <P>{errors.password.message}</P>}\n\n      <Button type=\"submit\" value=\"Sign In\" />\n      \n    </Form>\n  )\n}","import { LoginForm } from \"components/LoginForm/LoginForm\";\nimport { Helmet } from \"react-helmet\";\n\nexport default function LoginPage() {\n  return (\n    <div>\n\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n\n      <LoginForm />\n    </div>\n  )\n}"],"names":["Form","styled","P","Input","Button","LoginForm","dispatch","useDispatch","useForm","defaultValues","email","password","register","handleSubmit","errors","formState","reset","onSubmit","login","autoComplete","required","style","borderColor","placeholder","message","type","value","LoginPage","Helmet"],"sourceRoot":""}