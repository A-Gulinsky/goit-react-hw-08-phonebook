{"version":3,"file":"static/js/997.9c2f38b5.chunk.js","mappings":"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","sources":["components/Contacts/Contacts.styled.jsx","components/Contacts/ContactItem.jsx","components/Contacts/EditContactItem.styled.jsx","components/Contacts/EditContactItem.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Phonebook/Phonebook.styled.jsx","components/Phonebook/InputField.js","components/Phonebook/Phonebook.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","pages/ContactsPage/ContactsPage.styled.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-direction: column;\n  \n  margin-top: 20px;\n\n  background-color: #398bf7;\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n`\n\nexport const Li = styled.li`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 15px;\n\n  padding: 10px;\n\n  border-bottom: 1px solid #524f4f;\n`\n\nexport const Name = styled.p`\n  width: 150px;\n\n  font-size: 18px;\n  font-weight: 600;\n  color: #dfd4d4;\n`\n\nexport const Number = styled.p`\n  width: 100px;\n  \n  font-size: 18px;\n  font-weight: 600;\n  color: #fafafa;\n`\n\nexport const Button = styled.button`\n  \n  width: 24px;\n  height: 24px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0;\n\n  color: white;\n\n  border: 1px solid #4b4848;\n  border-radius: 4px;\n\n  transition: 150ms;\n\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n\n    transform: scale(1.02);\n  }\n`\n\n\n\n","// redux\nimport { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"redux/contacts/operations\";\n\n// emotion / react-icons\nimport { Button, Name, Number } from \"./Contacts.styled\";\nimport { AiFillEdit,AiOutlineDelete } from \"react-icons/ai\";\n\nexport const ContactItem = ({props, setEditContactId}) => {\n\n  const {name,number,id} = props\n\n  const dispatch = useDispatch()\n\n  return (\n    <>\n      <Name>{name} :</Name>\n      <Number>{number}</Number>\n\n      <Button\n        type=\"button\"\n        style={{backgroundColor: '#89c908'}}\n        onClick={() =>  { setEditContactId(id)}}>\n          <AiFillEdit style={{width: 18, height: 18}}/>\n      </Button>\n      \n      <Button\n        type=\"button\"\n        style={{backgroundColor: '#c71111'}}\n        onClick={() => dispatch(deleteContact(id))}>\n        <AiOutlineDelete style={{ width: 18, height: 18 }} />\n      </Button>\n    </>\n  )\n}","import styled from \"@emotion/styled\";\n\nexport const EditForm = styled.form`\n  display: flex;\n  align-items: center;\n  gap: 15px;\n`\n\nexport const InputText = styled.input`\n  width: 150px;\n  padding: 3px 6px;\n\n  font-size: 18px;\n  font-weight: 600;\n\n  background-color: #5a99ec;\n  border-radius: 4px;\n  border: 0px solid transparent;\n\n  outline: black;\n  color: white;\n`\n\nexport const InputNumber = styled.input`\n  \n  width: 105px;\n  padding: 3px 6px;\n\n  font-size: 18px;\n  font-weight: 600;\n\n  background-color: #5a99ec;\n  border-radius: 4px;\n  border: 1px solid transparent;\n\n  outline: none;\n  color: white;\n\n  &::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    appearance: none;\n    margin: 0;\n  }\n`\n\nexport const ButtonSave = styled.input`\n  padding: 4px 8px;\n  \n  color: white;\n\n  background-color: #5782f6;\n  border: 1px solid #4b4848;\n  border-radius: 4px;\n\n  transition: 150ms;\n\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n\n    transform: scale(1.02);\n  }\n`","//  react hook form/toast\nimport { useForm } from 'react-hook-form'\nimport { toast } from 'react-toastify'\n\n// redux\nimport { useDispatch } from \"react-redux\"\nimport { editContact } from 'redux/contacts/operations'\n\n// emotion\nimport { InputText,InputNumber, EditForm, ButtonSave } from './EditContactItem.styled'\n\nexport const EditContactItem = ({props,setEditContactId}) => {\n\n  const {id,name,number} = props\n\n  // redux\n  const dispatch = useDispatch()\n\n  // react hook form\n  const { register, handleSubmit, formState: { errors } } = useForm({\n    defaultValues: {\n      name: name,\n      number: number\n    }\n  })\n\n  // using dispatch in this func.\n  const onSubmit = ({name,number}) => {\n\n    const isNameValid = !!name && name.length >= 2 && number.length <= 15\n    const isNumberValid = !!number && number.length >= 6 && number.length <= 10;\n\n    if (!isNameValid || !isNumberValid) {\n      if (!isNameValid) {\n        return toast.error(`Name must not be less than 2 or more than 15 characters`)\n      }\n      if (!isNumberValid) {\n        return toast.error(`Number must not be less than 6 or more than 10 characters`)\n      }\n      return\n    }\n\n    dispatch(editContact({id,name,number}))\n    setEditContactId(null)\n  }\n\n  return (\n    <EditForm onSubmit={handleSubmit(onSubmit)}>\n\n      <InputText\n        autoComplete=\"off\"\n        {...register(\"name\")}\n        style={{ borderColor: errors.name ? 'red' : 'initial' }}\n        type='text'\n      />\n\n      <InputNumber\n        autoComplete=\"off\"\n        {...register(\"number\")}\n        type='number'\n      />\n\n      <ButtonSave type=\"submit\" value=\"save\" />\n      \n    </EditForm>\n  )\n}","import { useEffect, useState } from 'react'\n\n// emotion/prop-types\nimport PropTypes from 'prop-types'\nimport { Ul, Li } from './Contacts.styled'\n\n// redux\nimport { useDispatch, useSelector } from 'react-redux'\nimport { fetchContacts } from 'redux/contacts/operations'\nimport { getContacts } from 'redux/contacts/contactsSlice' \nimport { getFilter } from 'redux/contacts/filterSlice'\n\n// component\nimport { ContactItem } from './ContactItem'\nimport { EditContactItem } from './EditContactItem'\n\nconst Contacts = () => {\n\n  const [editContactId,setEditContactId] = useState(null)\n\n  // Reducers,dispatch\n  const contactsReducer = useSelector(getContacts)\n  const filterReducer = useSelector(getFilter)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchContacts())\n  }, [dispatch])\n\n  // get filtered contacts\n  const getFilteredContacts = () => {\n    const normalizedFilter = filterReducer.toLowerCase()\n    \n    return contactsReducer.filter(contact => contact.name.toLowerCase().includes(normalizedFilter))\n  }\n\n  return (\n    <Ul>\n      {getFilteredContacts().map(({ id, name, number }) => (\n\n        <Li key={id}>\n          {editContactId === id ? \n          \n            <>\n              <EditContactItem props={{id,name,number}} setEditContactId={setEditContactId} />\n            </>\n\n          : \n            <>\n              <ContactItem props={{name,number,id}} setEditContactId={setEditContactId} />\n            </>\n          }\n        </Li>\n        \n      ))}\n    </Ul>\n  )\n}\n\nContacts.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.exact({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }))\n}\n\nexport default Contacts","import styled from \"@emotion/styled\";\n\nexport const Label = styled.label`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n\n  padding: 20px;\n\n  border: 2px solid #615e5e;\n  border-radius: 4px;\n  box-shadow: 4px 4px 5px 0px rgba(0,0,0,0.75);\n\n  transition: 200ms;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.01);\n    box-shadow: 8px 8px 5px 0px rgba(0,0,0,0.75);\n  }\n`\n\nexport const P = styled.p`\n  font-size: 18px;\n  font-weight: 600;\n  color: #464242;\n`\n\nexport const Input = styled.input`\n  display: block;\n  width: 250px;\n\n  padding: 10px 8px;\n\n  font-size: 16px;\n  color: #514d4d;\n\n  border: 1px solid black;\n  border-radius: 4px;\n\n  outline: transparent;\n\n  transition: 200ms;\n\n  &:hover,\n  &:focus {\n    box-shadow: 0px 0px 5px #064ec1;\n  }\n`","// emotion/prop-types\nimport PropTypes from 'prop-types'\nimport { Label, P, Input } from './Filter.styled'\n\n// redux\nimport { useDispatch } from 'react-redux'\nimport { filter } from 'redux/contacts/filterSlice'\n\nconst Filter = () => {\n  \n  // redux\n  const dispatch = useDispatch()\n\n  // change redux state filter\n  const handleChangeValue = e => dispatch(filter(e.target.value))\n\n  return (\n    <Label>\n      <P>Search by filter</P>\n      <Input type=\"text\" onChange={handleChangeValue}/>\n    </Label>\n  )\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n}\n\nexport default Filter","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 15px;\n  width: 300px;\n\n  padding: 25px;\n\n  border: 2px solid #615e5e;\n  border-radius: 4px;\n  box-shadow: 4px 4px 5px 0px rgba(0,0,0,0.75);\n\n  transition: 200ms;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.01);\n    box-shadow: 8px 8px 5px 0px rgba(0,0,0,0.75);\n  }\n`\n\nexport const P = styled.p`\n  margin-bottom: 5px;\n\n  font-weight: 600;\n  text-align: center;\n  color: #064ec1;\n`\n\nexport const Input = styled.input`\n  display: block;\n  width: 250px;\n\n  padding: 10px 8px;\n\n  font-size: 16px;\n  color: #514d4d;\n\n  border: 1px solid black;\n  border-radius: 4px;\n\n  outline: transparent;\n  transition: 200ms;\n\n  &:hover,\n  &:focus {\n    box-shadow: 0px 0px 5px #064ec1;\n  }\n`\n\nexport const Button = styled.input`\n  padding: 10px 15px;\n\n  color: white;\n\n  background-color: #1d6be7;\n  border: 1px solid transparent;\n  border-radius: 4px;\n\n  transition: 150ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    background-color: #064ec1;\n  }\n`","\nexport const NameOptions = {\n  required: `Required field`,\n  pattern: {\n    value: /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n    message: `Incorrect format`\n  },\n  maxLength: {\n    value: 15,\n    message: 'Max 15 length'\n  },\n}\n\nexport const NumberOptions = {\n  required: 'Required field',\n  pattern: {\n    value: /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n    message: `Incorrect format`\n  },\n  maxLength: {\n    value: 10,\n    message: 'Max 10 length'\n  }\n}","// react hook form/emotion\nimport { useForm } from \"react-hook-form\"\nimport { Form, P, Input, Button } from \"components/Phonebook/Phonebook.styled\"\n\n// inputSettings\nimport { NameOptions, NumberOptions } from \"./InputField\"\n\n// redux\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { getContacts } from \"redux/contacts/contactsSlice\"\nimport { addContact } from \"redux/contacts/operations\"\n\nfunction Phonebook() {\n\n  // redux\n  const contacts = useSelector(getContacts)\n  const dispatch = useDispatch()\n  \n  // react hook form\n  const { register, handleSubmit, formState: { errors },reset } = useForm({\n    defaultValues: {\n      name: '',\n      number: ''\n    }\n  })\n\n  // using dispatch in this func.\n  const onSubmit = (data) => {\n    \n    if (contacts.some(contact => data.name === contact.name)) {\n      return alert(`${data.name} is already in contacts`)\n    }\n    \n    dispatch(addContact(data))\n    reset()\n  }\n\n  return (\n    <Form onSubmit={handleSubmit(onSubmit)}>\n\n      <Input\n        autoComplete=\"off\"\n        {...register(\"name\", NameOptions)}\n        style={{ borderColor: errors.name ? 'red' : 'initial' }}\n        placeholder=\"Name\"\n      />\n      {errors.name && <P>{errors.name.message}</P>}\n\n      <Input\n        autoComplete=\"off\"\n        {...register(\"number\", NumberOptions)}\n        style={{ borderColor: errors.number ? 'red' : 'initial' }}\n        placeholder=\"Number\"\n      />\n      {errors.number && <P>{errors.number.message}</P>}\n\n      <Button type=\"submit\" value=\"Add Contact\" />\n      \n    </Form>\n  )\n}\n\nexport default Phonebook","import styled from \"@emotion/styled\";\n\nexport const Title = styled.h2`\n  padding: 20px;\n\n  text-align: center;\n  color: #686464;\n`","import PropTypes from 'prop-types'\nimport { Title } from './Section.styled'\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      { title && <Title>{title}</Title> }\n      {children}\n    </section>\n  )\n}\n\nexport default Section\n\nSection.propTypes = {\n  title: PropTypes.string,\n}","import styled from \"@emotion/styled\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n\n  height: 100vh;\n`\n\nexport default Container","// components\nimport Contacts from \"components/Contacts\";\nimport Filter from \"components/Filter\";\nimport Phonebook from \"components/Phonebook\";\nimport Section from \"components/Section\";\nimport Container from \"./ContactsPage.styled\";\n\n// helmet\nimport { Helmet } from \"react-helmet\";\n\nexport default function ContactsPage() {\n\n  return (\n    <Container>\n\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n\n      <Section title=\"Phonebook\">\n        <Phonebook />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <Contacts />\n      </Section>\n    </Container>\n  )\n}"],"names":["Ul","styled","Li","Name","Number","Button","ContactItem","props","setEditContactId","name","number","id","dispatch","useDispatch","type","style","backgroundColor","onClick","width","height","deleteContact","EditForm","InputText","InputNumber","ButtonSave","EditContactItem","useForm","defaultValues","register","handleSubmit","errors","formState","onSubmit","isNameValid","length","isNumberValid","toast","editContact","autoComplete","borderColor","value","useState","editContactId","contactsReducer","useSelector","getContacts","filterReducer","getFilter","useEffect","fetchContacts","normalizedFilter","toLowerCase","filter","contact","includes","getFilteredContacts","map","Label","P","Input","onChange","e","target","Form","NameOptions","required","pattern","message","maxLength","NumberOptions","contacts","reset","data","some","alert","addContact","placeholder","Title","title","children","ContactsPage","Helmet"],"sourceRoot":""}